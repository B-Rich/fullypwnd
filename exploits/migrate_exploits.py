#!/usr/bin/python
#from subprocess import call
import subprocess
import os

source_windows_base = "../pentest/exploits/exploitdb/platforms/windows/"
destination_windows_base = "./windows/"
def compile_windows_smb_c():
    tmp_out = subprocess.Popen(["grep", "-Rl", "smb", source_windows_base + "remote/"], stdout=subprocess.PIPE)
    smb_out = subprocess.Popen(["grep", "\.c$"], stdin=tmp_out.stdout, stdout=subprocess.PIPE)
    smb_files, smb_err = smb_out.communicate()

    for i in smb_files.splitlines():
        if i != None and os.path.exists(i):
            source_filename = os.path.basename(i)
            compiled_filename, extension = source_filename.split(".")
            subprocess.call(["gcc", i, "-o", destination_windows_base + "/smb/" + compiled_filename + ".o"])

def copy_windows_ftp_python():
    tmp_out = subprocess.Popen(["grep", "-Rl", "smb", source_windows_base + "remote/"], stdout=subprocess.PIPE)
    ftp_out = subprocess.Popen(["grep", "\.py$"], stdin=tmp_out.stdout, stdout=subprocess.PIPE)
    ftp_files, ftp_err = ftp_out.communicate()
    
    for i in ftp_files.splitlines():
        subprocess.call(["cp", i, destination_windows_base + "ftp/"])

def copy_windows_ftp_perl():
    tmp_out = subprocess.Popen(["grep", "-Rl", "ftp", source_windows_base + "remote/"], stdout=subprocess.PIPE)
    ftp_out = subprocess.Popen(["grep", "\.pl$"], stdin=tmp_out.stdout, stdout=subprocess.PIPE)
    ftp_files, ftp_err = ftp_out.communicate()
    
    for i in ftp_files.splitlines():
        subprocess.call(["cp", i, destination_windows_base + "ftp/"])

def copy_windows_smb_perl():
    tmp_out = subprocess.Popen(["grep", "-Rl", "smb", source_windows_base + "remote/"], stdout=subprocess.PIPE)
    smb_out = subprocess.Popen(["grep", "\.pl$"], stdin=tmp_out.stdout, stdout=subprocess.PIPE)
    smb_files, smb_err = smb_out.communicate()
    
    for i in smb_files.splitlines():
        subprocess.call(["cp", i, destination_windows_base + "smb/"])

def copy_windows_smb_python():
    tmp_out = subprocess.Popen(["grep", "-Rl", "smb", source_windows_base + "remote/"], stdout=subprocess.PIPE)
    smb_out = subprocess.Popen(["grep", "\.py$"], stdin=tmp_out.stdout, stdout=subprocess.PIPE)
    smb_files, smb_err = smb_out.communicate()
    
    for i in smb_files.splitlines():
        subprocess.call(["cp", i, destination_windows_base + "smb/"])

def compile_windows_ftp_c():
    tmp_out = subprocess.Popen(["grep", "-Rl", "ftp", "../pentest/exploits/exploitdb/platforms/windows/remote/"], stdout=subprocess.PIPE)
    ftp_out = subprocess.Popen(["grep", "\.c$"], stdin=tmp_out.stdout, stdout=subprocess.PIPE)
    ftp_files, ftp_err = ftp_out.communicate()

    for i in ftp_files.splitlines():
        if i != None and os.path.exists(i):
            source_filename = os.path.basename(i)
            compiled_filename, extension = source_filename.split(".")
            subprocess.call(["gcc", i, "-o", "./windows/ftp/" + compiled_filename + ".o"])

#compile_windows_smb_c()
#compile_windows_ftp_c()
#copy_windows_smb_python()
#copy_windows_ftp_python()
#copy_windows_smb_perl()
#copy_windows_ftp_perl()
copy_windows_ftp_perl()
